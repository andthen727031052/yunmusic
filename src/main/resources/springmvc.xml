<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"

       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd

        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--  扫描注解 -->
    <context:component-scan base-package="com.yun" use-default-filters="false">
        <!-- springMVC的配置 如果某些情况下 需要扫描某个指定的父包
        context:include-filter指定扫描那些注解
         -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>

    </context:component-scan>

    <!-- 3 控制器类上使用@Validated注解时，需要增加该配置 -->
    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>




    <!-- 	设置conversion-service 引入转换器 	-->
    <!-- 2 引入验证器配置 -->
    <mvc:annotation-driven validator="validator" conversion-service="convertorService">
        <!-- 设置自定义的转换器 -->
        <!-- 处理json里的日期数据，默认日期被fastjson转为时间戳数据 -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <!--  ObjectMapper objectMapper = new ObjectMapper();
                     objectMapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd")) -->
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>


        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="convertorService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <!-- 注入的是一个列表对象 -->
            <list>
                <bean class="com.yun.convert.CustomerDateConvert"></bean>
                <bean class="com.yun.convert.CustomerIntConvert"></bean>
            </list>
        </property>
    </bean>



    <!-- 1 验证器的配置 -->
    <!-- 配置资源文件 -->
    <bean id="hibernateMessages"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="basenames">
            <list>
                <value>ValidationMessages</value>
            </list>
        </property>
    </bean>
    <!-- 配置验证器 -->
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass"
                  value="org.hibernate.validator.HibernateValidator"></property>
        <property name="validationMessageSource"
                  ref="hibernateMessages"></property>
    </bean>

    <!-- 文件上传的解析器  id的值不能改-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传文件的最大大小 ，单位字节 ，比如 1024 * 1024 = 1M-->
        <property name="maxUploadSize" value="10485760"></property>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="resolveLazily" value="true"/>
    </bean>




</beans>